% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/07_final_processing.R
\name{final_processing}
\alias{final_processing}
\title{Prepare Diagnostic and Sequencing REDCap Forms}
\usage{
final_processing(
  mydata,
  dictPath = system.file("extdata", "RABVlab_DataDictionary_redcap2025-08-04.csv",
    package = "rabvRedcapProcessing"),
  access_group = c("east_africa", "malawi", "nigeria", "peru", "philippines")
)
}
\arguments{
\item{mydata}{A data frame containing cleaned lab records. Must include a \code{sample_id} and \code{duplicate_id} column.}

\item{access_group}{A character string specifying the REDCap Data Access Group. Must be one of:
\code{"east_africa"}, \code{"malawi"}, \code{"nigeria"}, \code{"peru"}, or \code{"philippines"}.}

\item{dictUrl}{A URL to the data dictionary CSV file. Defaults to GitHub raw link.}

\item{fallbackPath}{Local fallback path, \code{system.file()}.}
}
\value{
A named list with two tibbles:
\describe{
\item{diagnostic_form}{A tibble ready for REDCap import into the diagnostic form.}
\item{sequencing_form}{A tibble ready for REDCap import into the sequencing form.}
}
}
\description{
Processes cleaned laboratory data and splits it into two REDCap-compatible data frames:
one for the \code{diagnostic} form and another for the \code{sequencing} form. These are formatted
for use with REDCap repeat instruments. By default, it loads an online dictionary in
the RAGE redcap repository, or as a fallback, an internal dictionary included with the package,
but users can specify a different dictionary file via the \code{dictUrl} argument.
}
\details{
Uses \code{\link{get_redcap_form_columns}} to extract form-specific variables.
Ensures REDCap repeat instrument fields (\code{redcap_repeat_instrument}, \code{redcap_repeat_instance})
are properly set and all required fields are present. Missing fields are filled with \code{""}
as required for REDCap imports.

#' @examples
\dontrun{
# Assuming `cleaned_data` contains your processed lab records
processed_df <- final_processing(mydata = cleaned_data, access_group = "nigeria")

# Extract the two REDCap-ready forms
diagnostic_form  <- processed_df$diagnostic_form
sequencing_form  <- processed_df$sequencing_form

# Write to CSV for REDCap import (ensure row.names = FALSE)
write.csv(diagnostic_form, "diagnostic_form.csv", row.names = FALSE)
write.csv(sequencing_form, "sequencing_form.csv", row.names = FALSE)

# You can now upload these files via the REDCap data import tool
}
}
